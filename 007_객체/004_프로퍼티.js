// 004 프로퍼티

/*
    - 객체는 프로퍼티의 집합이며 프로퍼티는 키와 값으로 구성된다.
    - 프로퍼티 키: 빈 문자열을 포함하는 모든 문자열 또는 심벌 값
    - 프로퍼티 값 : 자바스크립트에서 사용할 수 있는 모든 값
    - 프로퍼티 키는 프로퍼티 값에 접근 할 수 있는 이름으로서 식별자 역할을 한다.
    하지만 식별자 네이밍 규칙을 따라야하는 것은 아니다.
    - 식별자 네이밍 규칙을 따르지 않는 이름에는 반드시 따옴표를 사용해야한다.
 */
var person = {
    //프로퍼티 키는 name, 프로퍼티 값은 'Lee'
    name: 'Lee',
    //키는 age , 값은 20
    age: 20
};

//식별자 네이밍 규칙을 따르지 않는 이름에는 반드시 따옴표를 사용해야한다.
var saram = {
    firstName: 'Soohooni',
    'last-name': 'Kim',
    //last-name: 'Kim' //SyntaxError
};

// 빈 문자열을 프로퍼티 키로 사용해도 에러가 발생하지 않지만 키로서 의미를 갖지 못하므로 권장하지 않는다.
var foo = {
    '': ''
};

console.log(foo); // { '': '' }

/*
    - 프로퍼티 키에 문자열이나 심벌값 이외의 값을 사용하면 암묵적 타입 변환을 통해 문자열이 된다.
    - 숫자 리터럴을 사용하면 내부적으로 문자열로 변환된다.
 */
var foo2 = {
    0: 1,
    1: 2,
    2: 3,
};
console.log(foo2); //{ '0': 1, '1': 2, '2': 3 }

// var, function 과 같은 예약어를 프로퍼티 키로 사용해도 에러가 발생하지 않지만, 예상치 못한 에러가 발생할 여지가 있으므로 권장하지 않는다.

// 이미 존재하는 프로퍼티 키를 중복선언하면 나중에 선언한 프로퍼티가 먼저 선언한 프로퍼티를 덮어쓴다. 에러가 발생하지 않는다.

var foo3 = {
    name: 'Lee',
    name: 'Kim',
};
console.log(foo3.name); //Kim