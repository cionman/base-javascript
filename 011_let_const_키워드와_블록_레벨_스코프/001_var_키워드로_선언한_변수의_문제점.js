// 001 var 키워드로 선언한 변수의 문제점

/*
    1. 변수 중복 선언 하용
 */

var x = 1;
var y = 1;


//var 키워드로 선언된 변수는 같은 스코프 내에서 중복선언을 허용한다.
var x = 100;
var y; // 초기화문이 없는 변수 선언문은 무시된다.

console.log(x); //100
console.log(y); //1

/*
    2. 함수 레벨 스코프
    - var 키워드로 선언한 변수는 오로지 함수의 코드 블록 만을 지역 스코프로 인정한다.
    - 함수 외부에서 var 키워드로 선언한 변수는 코드 블록 내에서 선언해도 모두 전역 변수가 된다.
    - 함수 레벨 스코프는 전역 변수를 남발할 가능성을 높인다.
    - 이로 인해 전역변수가 중복 선언되는 경우가 발생한다.
 */

var a = 1;
if (true) {
    var a = 10;
}

console.log(a); //10

var i = 10;

//for문에서 선언한 i는 전역 변수다. 이미 선언된 전역 변수 i가 있으므로 중복 선언된다.
for (var i = 0; i < 5; i++) {
    console.log(i); // 0 1 2 3 4
}
console.log(i); // 5


/*
    3. 변수 호이스팅
    - var 키워드로 변수를 선언하면 변수 호이스팅에 의해 변수 선언문이 스코프의 선두로 끌어 올려진 것처럼 동작한다.
    - 변수 호이스팅에 의해 var키워드로 선언한 변수는 변수 선언문 이전에 참조할 수 있다. 할당문 이전에 참조하면 언제나 undefined를 반환한다.
 */

// 이 시점에는 변수 호이스팅에 의해 이미  c 변수가 선언되었다.
// 변수 c는 undefined로 초기화 된다.

console.log(c); //undefined

c = 123;

console.log(c); //123
var c;