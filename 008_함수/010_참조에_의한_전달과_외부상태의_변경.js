// 010 참조에 의한 전달과 외부 상태의 변경

function changeVal(primitive, obj) {
    primitive += 100;
    obj.name = 'Kim';
}

//외부 상태
var num = 100;
var person = { name: 'Lee' };

console.log(num); //100
console.log(person); //{ name: 'Lee' }

//원시 값은 값 자체가 복사되어 전달되고 객체는 참조값이 복사되어 전달된다.
changeVal(num, person);

console.log(num); // 100
console.log(person); // { name: 'Kim' }

/*
    - 함수가 외부 상태를 변경하면 상태변화를 추적하기 어려워진다.
    - 코드의 복잡성을 증가시키고 가독성을 해치는 원인이 된다.
    - 복잡한 코드에서 의도치 않은 객체의 변경을 추적하는 것은 어려운 일이다. 객체의 변경을 추적하려면 옵저버 패턴 등을 통해 객체를 참조를 공유하는 모든 이들에게
    사실을 통지하고 이에 대처하는 추가 대응이 필요하다.

    - 이러한 문제의 해결방법 중 하나는 객체를 불변 객체로 만들어 사용하는 것
    - 객체의 복사본을 새롭게 생성하는 비용은 들지만 객체를 마치 원시 값처럼 변경 불가능한 값으로 동작하게 만드는 것이다.

    // 순수함수 - 외부 상태를 변경하지 않고 외부상태에 의존하지도 않는 함수를 순수함수라 한다.
    - 순수 함수를 통해 부수 효과를 최대한 억제하여 오류를 피하고 프로그램의 안정성을 높이려는 프로그래밍 패러다임을 함수형 프로그래밍이라고 한다.
 */